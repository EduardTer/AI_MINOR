// <auto-generated />
using System;
using Fysio_API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Fysio_API.Migrations
{
    [DbContext(typeof(FysioDbContext))]
    partial class FysioDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Fysio_API.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int>("TherapistId")
                        .HasColumnType("integer");

                    b.HasKey("ClientId");

                    b.HasIndex("TherapistId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Fysio_API.Models.ClientExcercise", b =>
                {
                    b.Property<int>("ClientExcerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ClientId")
                        .HasColumnType("integer");

                    b.Property<int>("ExcerciseId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FinishingDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.Property<int>("WeeklyRepetitions")
                        .HasColumnType("integer");

                    b.Property<int>("WeeklyRepetitionsCompleted")
                        .HasColumnType("integer");

                    b.HasKey("ClientExcerciseId");

                    b.HasIndex("ClientId");

                    b.HasIndex("ExcerciseId");

                    b.ToTable("ClientExcercises");
                });

            modelBuilder.Entity("Fysio_API.Models.Excercise", b =>
                {
                    b.Property<int>("ExcerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CreatedByTherapistTherapistId")
                        .HasColumnType("integer");

                    b.Property<int>("CreatedByTherapist_Id")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("VideoLink")
                        .HasColumnType("text");

                    b.HasKey("ExcerciseId");

                    b.HasIndex("CreatedByTherapistTherapistId");

                    b.ToTable("Excercises");
                });

            modelBuilder.Entity("Fysio_API.Models.Therapist", b =>
                {
                    b.Property<int>("TherapistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("TherapistId");

                    b.ToTable("Therapists");
                });

            modelBuilder.Entity("Fysio_API.Models.Client", b =>
                {
                    b.HasOne("Fysio_API.Models.Therapist", "Therapist")
                        .WithMany("Clients")
                        .HasForeignKey("TherapistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Therapist");
                });

            modelBuilder.Entity("Fysio_API.Models.ClientExcercise", b =>
                {
                    b.HasOne("Fysio_API.Models.Client", "Client")
                        .WithMany("ClientExcercises")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fysio_API.Models.Excercise", "Excercise")
                        .WithMany("ClientExcercises")
                        .HasForeignKey("ExcerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Excercise");
                });

            modelBuilder.Entity("Fysio_API.Models.Excercise", b =>
                {
                    b.HasOne("Fysio_API.Models.Therapist", "CreatedByTherapist")
                        .WithMany()
                        .HasForeignKey("CreatedByTherapistTherapistId");

                    b.Navigation("CreatedByTherapist");
                });

            modelBuilder.Entity("Fysio_API.Models.Client", b =>
                {
                    b.Navigation("ClientExcercises");
                });

            modelBuilder.Entity("Fysio_API.Models.Excercise", b =>
                {
                    b.Navigation("ClientExcercises");
                });

            modelBuilder.Entity("Fysio_API.Models.Therapist", b =>
                {
                    b.Navigation("Clients");
                });
#pragma warning restore 612, 618
        }
    }
}
